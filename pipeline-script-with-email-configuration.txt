pipeline{
  agent any
   environment {
       EMAIL = 'moinakhtar@dizaynvip.com'
       EMAIL_SUCCESS_SUBJECT = " is Success"
       EMAIL_FAILURE_SUBJECT = "  is Failure"
       EMAIL_UNSTABLE_SUBJECT = " is Unstable"
       EMAIL_SUCCESS_MSG = "  is Success, please find attached logs file."
       EMAIL_FAILURE_MSG = "  is Failure, please find attached logs file."
       EMAIL_UNSTABLE_MSG = " is Unstable, please find attached logs file."
       ENV_PYTHON_PATH = ".venv/bin/python3.9"
   }
  stages {

        stage("Assistant Checkout "){
          
           steps {
              //  git branch: 'development', changelog: false, credentialsId: 'bitbucket-cre', poll: false, url: 'https:/bitbucket.org/dizaynviptech/assistant.git'
               // sh "git checkout pyinstaller_scripts_for_assistant_services"
                sh "sudo mkdir -p release"
                sh "sudo mkdir -p .venv"
                sh "sudo chmod -R 777 ."
                sh "sudo cp -R /home/dai1/Project/assistant/resources /var/lib/jenkins/workspace/assistant3/resources"
                sh "sudo chmod -R 777 ."
                sh "sudo chmod -R 777 ./*"
            }

            post {
                success {
                    emailext attachLog: true, body: env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject: env.STATE_NAME + ' '+ EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                }
                unstable {
                    emailext attachLog: true, body: env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject: env.STATE_NAME + ' '+ EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                }
                failure {
                emailext attachLog: true, body: env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject: env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                }
            }

        }
        
        
        stage('Environment Initialization'){
          
            steps {
                    sh "ls -a" 
                    sh "which python3.9"
                    sh "python3.9 -m pip install pipenv"
                    sh 'python3.9 -m pipenv install --dev'
            }
                                        
            post {
                success { 
                    emailext attachLog: true, body: env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject: env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                }
                unstable { 
                    emailext attachLog: true, body: env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject: env.STATE_NAME + ' '+ EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                }
                failure { 
                emailext attachLog: true, body: env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject: Eenv.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                }
            }
            
        }
        
             
        stage('Testing - Face Recognition Service'){
        
          steps {
                sh env.ENV_PYTHON_PATH+' tests/services_tests/facial_recognition_service.py'
          }
          
          post {
                success { 
                    emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                }
                unstable { 
                    emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                }
                failure { 
                emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                }
            }      
        }   
              
                
        stage('Testing - Question & Answer Service'){
          
            steps {
                  sh env.ENV_PYTHON_PATH+" tests/services_tests/qa_service.py"
            }
            post {
                  success { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                  }
                  unstable { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                  }
                  failure { 
                  emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                  }
              }      
        }   
            
                
        stage('Testing - Translation Service'){
          
            steps {
                  sh env.ENV_PYTHON_PATH+" tests/services_tests/translation_service.py"
            }
            post {
                  success { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                  }
                  unstable { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                  }
                  failure { 
                  emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                  }
              }      
        } 
        
        
        stage('Testing - Nlp Service'){
          
            steps {
                  sh "sudo " + env.ENV_PYTHON_PATH+" tests/services_tests/nlp_service.py"
            }
            post {
                  success { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                  }
                  unstable { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                  }
                  failure { 
                  emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                  }
              }      
        }  
            
            
        stage('Testing - Bert Service'){
          
            steps {
                  sh "sudo " + env.ENV_PYTHON_PATH+" tests/services_tests/bert_service.py"
            }
            post {
                  success { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                  }
                  unstable { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                  }
                  failure { 
                  emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                  }
              }      
        } 
          
                   
        stage('Testing - Roberta Service'){
          
            steps {
                  sh "sudo " + env.ENV_PYTHON_PATH+" tests/services_tests/roberta_service.py"
            }
            post {
                  success { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                  }
                  unstable { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                  }
                  failure { 
                  emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                  }
              }
        }  
                   
                   
        stage('Testing - Hologram Service'){
            
            steps {
                  sh "sudo " + env.ENV_PYTHON_PATH+"   tests/services_tests/hologram_face_service.py"
            }
            post {
                  success { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                  }
                  unstable { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                  }
                  failure { 
                  emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                  }
              }      
        }    
               
                
        stage('Testing - Wake Word Service'){
          
            steps {
                  sh "sudo " + env.ENV_PYTHON_PATH+" tests/services_tests/asr_service.py"
            }
            post {
                  success { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                  }
                  unstable { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                  }
                  failure { 
                  emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                  }
              }      
        }
        
        
        stage('Generating -  Assistant Binary File '){
          
            steps {
                  sh 'shells/binary_builds/assistant.sh'
            }
            post {
                  success { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                  }
                  unstable { 
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                  }
                  failure { 
                  emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                  }
              }      
         } 
         
         
        stage('Generating -  Hologram Binary File '){
              
              steps {
                    sh 'shells/binary_builds/hologram.sh'
               }
               post {
                success {
                    emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                }
                unstable {
                    emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                }
                failure {
                emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                }
            }
         }  


        stage('Generating -  Face Recognition Binary File '){
             
                steps {
                      sh 'shells/binary_builds/face.sh'
                }
                post {
                      success {
                          emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                      }
                      unstable {
                          emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                      }
                      failure {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                      }
                }
        }
        

        stage('Generating -  Bert Binary File '){
              
                steps {
                       sh 'shells/binary_builds/bert.sh'
                }
                post {
                      success {
                          emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                      }
                      unstable {
                          emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                      }
                      failure {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                      }
                }
        }
         
         
        stage('Generating -  Roberta Binary File '){
             
                steps {
                      sh 'shells/binary_builds/roberta.sh'
                }
                post {
                      success {
                          emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                      }
                      unstable {
                          emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                      }
                      failure {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                      }
                  }
         }  
        
        
        stage('Generating - Nlp Binary File '){
                steps {
                      sh 'shells/binary_builds/nlp.sh'
                }
                post {
                  success {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                  }
                  unstable {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                  }
                  failure {
                  emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                  }
                }
        }
         

        stage('Generating -  Question and Answer Binary File '){
             
                steps {
                      sh 'shells/binary_builds/qa.sh'
                }
                post {
                  success {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                  }
                  unstable {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                  }
                  failure {
                  emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                  }
                }
        }
        
          
        stage('Generating -  Noise Binary File '){
               
                steps {
                    sh 'shells/binary_builds/noise.sh'
                }
                post {
                  success {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                  }
                  unstable {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                  }
                  failure {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                  }
               }
        }
         
           
        stage('Generating -  Translation Binary File '){
               
                steps {
                    sh 'shells/binary_builds/translation.sh'
                }
                post {
                  success {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                  }
                  unstable {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                  }
                  failure {
                  emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                  }
                }
        }
         
         
        stage('Generating Asr Binary File '){
              
                steps {
                      sh 'shells/binary_builds/asr.sh'
                }
                post {
                  success {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_SUCCESS_SUBJECT, to: env.EMAIL
                  }
                  unstable {
                      emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_UNSTABLE_SUBJECT, to: env.EMAIL
                  }
                  failure {
                  emailext attachLog: true, body:  env.STATE_NAME + ' ' + EMAIL_FAILURE_MSG, subject:  env.STATE_NAME + ' ' + EMAIL_FAILURE_SUBJECT, to: env.EMAIL
                  }
                }
        }
  }


}
